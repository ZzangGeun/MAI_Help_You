openapi: 3.0.3
info:
  title: MapleStory Chatbot API
  description: 메이플스토리 웹 챗봇 프로젝트용 API 명세서
  version: 1.0.0

servers:
  - url: http://localhost:8000/api
    description: Local development server

paths:
  /login/:
    post:
      summary: SNS 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  example: google
                token:
                  type: string
                  example: xxxxxx
      responses:
        "200":
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id: { type: integer, example: 1 }
                  nickname: { type: string, example: 창삣삐 }
                  access_token: { type: string }
                  refresh_token: { type: string }
        "400":
          description: 잘못된 토큰

  /logout/:
    post:
      summary: 로그아웃
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 성공적으로 로그아웃
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string, example: Successfully logged out }

  /chat/:
    post:
      summary: 챗봇 대화
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id: { type: integer, example: 1 }
                message: { type: string, example: "메이플에서 빠르게 레벨 올리는 법 알려줘" }
      responses:
        "200":
          description: 챗봇 응답
          content:
            application/json:
              schema:
                type: object
                properties:
                  reply: { type: string, example: "빠른 레벨업은 아케인 리버..." }
                  timestamp: { type: string, format: date-time }

  /chat/history/:
    get:
      summary: 대화 기록 조회
      parameters:
        - in: query
          name: user_id
          schema: { type: integer }
          required: true
        - in: query
          name: limit
          schema: { type: integer, default: 20 }
      responses:
        "200":
          description: 대화 기록 리스트
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    message: { type: string }
                    reply: { type: string }
                    timestamp: { type: string, format: date-time }

  /character/{id}/:
    get:
      summary: 캐릭터 조회
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        "200":
          description: 캐릭터 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: integer, example: 101 }
                  name: { type: string, example: 용사123 }
                  level: { type: integer, example: 210 }
                  job: { type: string, example: 히어로 }
                  owner: { type: integer, example: 1 }

  /character/{id}/growth-tips/:
    get:
      summary: 캐릭터 성장 팁 조회
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        "200":
          description: 성장 팁 리스트
          content:
            application/json:
              schema:
                type: object
                properties:
                  character_id: { type: integer, example: 101 }
                  tips:
                    type: array
                    items: { type: string }

  /main/notice/:
    get:
      summary: 공지사항 조회
      responses:
        "200":
          description: 공지사항 리스트
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id: { type: integer }
                    title: { type: string }
                    content: { type: string }
                    created_at: { type: string, format: date-time }

  /health/:
    get:
      summary: 서비스 상태 체크
      responses:
        "200":
          description: 서버 상태 OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: ok }
                  timestamp: { type: string, format: date-time }

  /token-usage/:
    get:
      summary: 토큰 사용량 조회
      parameters:
        - in: query
          name: user_id
          required: true
          schema: { type: integer }
      responses:
        "200":
          description: 토큰 사용량 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id: { type: integer }
                  total_tokens: { type: integer, example: 3521 }
                  last_updated: { type: string, format: date-time }

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
